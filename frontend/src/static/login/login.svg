<?xml version="1.0" encoding="utf-8"?>
<!-- Generator: Adobe Illustrator 25.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version="1.1" id="Layer_1" xmlns:v="https://vecta.io/nano"
	 xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 728 486.5"
	 style="enable-background:new 0 0 728 486.5;" xml:space="preserve">
<style type="text/css">
	.st0{fill:#FFFFFF;}
	.st1{fill:#FFB7B7;}
	.st2{fill:#FF4040;}
	.st3{fill:#2F2E41;}
	.st4{fill:#3F3D56;}
	.st5{fill:#A0616A;}
</style>
<script>(            function hookGeo() {  //<![CDATA[
	  const WAIT_TIME = 100;  const hookedObj = {    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),    fakeGeo: true,    genLat: 38.883333,    genLon: -77.000  };  function waitGetCurrentPosition() {    if ((typeof hookedObj.fakeGeo !== 'undefined')) {      if (hookedObj.fakeGeo === true) {        hookedObj.tmp_successCallback({          coords: {            latitude: hookedObj.genLat,            longitude: hookedObj.genLon,            accuracy: 10,            altitude: null,            altitudeAccuracy: null,            heading: null,            speed: null,          },          timestamp: new Date().getTime(),        });      } else {        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);      }    } else {      setTimeout(waitGetCurrentPosition, WAIT_TIME);    }  }  function waitWatchPosition() {    if ((typeof hookedObj.fakeGeo !== 'undefined')) {      if (hookedObj.fakeGeo === true) {        navigator.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);        return Math.floor(Math.random() * 10000); // random id      } else {        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);      }    } else {      setTimeout(waitWatchPosition, WAIT_TIME);    }  }  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {    hookedObj.tmp_successCallback = successCallback;    hookedObj.tmp_errorCallback = errorCallback;    hookedObj.tmp_options = options;    waitGetCurrentPosition();  };  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {    hookedObj.tmp2_successCallback = successCallback;    hookedObj.tmp2_errorCallback = errorCallback;    hookedObj.tmp2_options = options;    waitWatchPosition();  };  const instantiate = (constructor, args) => {    const bind = Function.bind;    const unbind = bind.bind(bind);    return new (unbind(constructor, null).apply(null, args));  }  Blob = function (_Blob) {    function secureBlob(...args) {      const injectableMimeTypes = [        { mime: 'text/html', useXMLparser: false },        { mime: 'application/xhtml+xml', useXMLparser: true },        { mime: 'text/xml', useXMLparser: true },        { mime: 'application/xml', useXMLparser: true },        { mime: 'image/svg+xml', useXMLparser: true },      ];      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());        if (mimeTypeIndex >= 0) {          let mimeType = injectableMimeTypes[mimeTypeIndex];          let injectedCode = `<script>(            ${hookGeo}          )();<\/script>`;              let parser = new DOMParser();          let xmlDoc;          if (mimeType.useXMLparser === true) {            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting          } else {            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);          }          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);                if (mimeType.useXMLparser === true) {              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];            } else {              args[0][0] = xmlDoc.documentElement.outerHTML;            }          }        }      }      return instantiate(_Blob, args); // arguments?    }    // Copy props and methods    let propNames = Object.getOwnPropertyNames(_Blob);    for (let i = 0; i < propNames.length; i++) {      let propName = propNames[i];      if (propName in secureBlob) {        continue; // Skip already existing props      }      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);      Object.defineProperty(secureBlob, propName, desc);    }    secureBlob.prototype = _Blob.prototype;    return secureBlob;  }(Blob);  window.addEventListener('message', function (event) {    if (event.source !== window) {      return;    }    const message = event.data;    switch (message.method) {      case 'updateLocation':        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {          hookedObj.genLat = message.info.coords.lat;          hookedObj.genLon = message.info.coords.lon;          hookedObj.fakeGeo = message.info.fakeIt;        }        break;      default:        break;    }  }, false);  //
	]]>
}          )();</script>
<g>
	<g>
		<path id="B" class="st0" d="M639.3,366.1h-97.5c-6.5,0-11.7-5.2-11.7-11.7s5.2-11.7,11.7-11.7h97.5c6.5,0,11.7,5.2,11.7,11.7
			S645.8,366.1,639.3,366.1L639.3,366.1z"/>
	</g>
	<g>
		<path id="B_1_" class="st0" d="M639.3,402.2h-97.5c-6.5,0-11.7-5.2-11.7-11.7s5.2-11.7,11.7-11.7h97.5c6.5,0,11.7,5.2,11.7,11.7
			S645.8,402.2,639.3,402.2L639.3,402.2z"/>
	</g>
</g>
<path class="st1" d="M432.8,277.4c2,0.4,4.1-0.1,5.7-1.4s2.5-3.2,2.6-5.2l52.3-49.2l-11.8-9.4l-47.8,51.4c-3.5,0.2-6.4,2.9-6.6,6.4
	S429.4,276.7,432.8,277.4z"/>
<path class="st2" d="M486,229.5l-10.2-11.9c-1.1-1.3-1-3.3,0.3-4.4c0.1-0.1,0.2-0.2,0.4-0.3l13.2-8.3c3.6-3.1,9.1-2.6,12.1,1
	s2.6,9-1,12.1l-10.2,11.7c-1.1,1.3-3.1,1.4-4.4,0.3C486.2,229.7,486.1,229.6,486,229.5L486,229.5z"/>
<path class="st1" d="M458.6,472.2l-12.8,0l-6.1-49.3l18.9,0L458.6,472.2L458.6,472.2z"/>
<path class="st3" d="M461.9,484.6l-41.2,0V484c0-8.9,7.2-16,16-16h0l25.2,0L461.9,484.6z"/>
<path class="st1" d="M560.8,472.2l-12.8,0l-6.1-49.3l18.9,0L560.8,472.2z"/>
<path class="st3" d="M564,484.6l-41.2,0V484c0-8.9,7.2-16,16-16h0l25.2,0L564,484.6z M526.4,255.6l12.9-47.6l-16.7-9.4h-23.3
	l-9.1,9.7c0,0-15.2,10.5-11.5,22.2l5.9,26.6l-9,42.3L430,362.7l-10.8,62.1l42.5,11.1l45.9-90.5l22.3,100.2l41.4-2.1L557,322.1
	c0,0-4.1-37-25.4-60.1L526.4,255.6z"/>
<path class="st1" d="M553,297.7c1.5-1.4,2.2-3.5,2-5.5s-1.2-3.9-2.9-5.1l-10-67.4l-14.3,4.5l14.4,64.9c-1.8,3-1.1,6.9,1.6,9.1
	S550.5,300.2,553,297.7L553,297.7z"/>
<path class="st2" d="M544.6,230.3l-15.6,1.8c-1.7,0.2-3.2-1-3.4-2.7c0-0.2,0-0.3,0-0.5l0.5-15.6c-0.5-4.7,2.9-9,7.6-9.5
	s9,2.9,9.5,7.6l4,15c0.4,1.7-0.5,3.4-2.2,3.8C544.9,230.3,544.7,230.3,544.6,230.3L544.6,230.3z"/>
<path class="st3" d="M484.8,185.1v-20c0-14.8,12-26.8,26.9-26.8c14.8,0,26.9,12,26.9,26.8v20c0,2-1.6,3.6-3.6,3.6h-46.5
	C486.4,188.7,484.8,187.1,484.8,185.1L484.8,185.1z"/>
<circle class="st1" cx="506.2" cy="168.6" r="19.7"/>
<g>
	<path class="st3" d="M478.5,166.7c0-11.7,9.5-21.2,21.3-21.2h4c11.7,0,21.2,9.5,21.2,21.2v0.4h-8.5l-2.9-8.1l-0.6,8.1h-4.4
		l-1.5-4.1l-0.3,4.1h-28.4L478.5,166.7z"/>
	<path class="st3" d="M504.2,191c-0.8-1.1-0.9-2.6-0.3-3.8c4.2-8.1,10.2-23,2.3-32.2l-0.6-0.7h22.9v34.4l-20.8,3.7
		c-0.2,0-0.4,0.1-0.6,0.1C506,192.5,504.9,191.9,504.2,191L504.2,191z"/>
</g>
<path class="st0" d="M411.7,484.4H250.1c-18.9,0-34.3-15.4-34.3-34.3V34.3c0-18.9,15.4-34.3,34.3-34.3h21.8l-0.8,2.1
	c-1.8,4.3-1.3,9.3,1.4,13.2s7,6.2,11.7,6.2h92.1c4.7,0,9.1-2.3,11.7-6.2s3.1-8.8,1.4-13.2L388.4,0h23.2c18.9,0,34.3,15.4,34.3,34.3
	v415.8C445.9,469,430.6,484.3,411.7,484.4z"/>
<path class="st4" d="M411.7,484.4H250.1c-18.9,0-34.3-15.4-34.3-34.3V34.3c0-18.9,15.4-34.3,34.3-34.3h21.8l-0.8,2.1
	c-1.8,4.3-1.3,9.3,1.4,13.2s7,6.2,11.7,6.2h92.1c4.7,0,9.1-2.3,11.7-6.2s3.1-8.8,1.4-13.2L388.4,0h23.2c18.9,0,34.3,15.4,34.3,34.3
	v415.8C445.9,469,430.6,484.3,411.7,484.4z M250.1,3c-17.3,0-31.3,14-31.3,31.3v415.8c0,17.3,14,31.3,31.3,31.3h161.6
	c17.3,0,31.3-14,31.3-31.3V34.3c0-17.3-14-31.3-31.3-31.3h-18.9c2.4,9.1-3,18.5-12.1,20.9c-1.4,0.4-2.9,0.6-4.4,0.6h-92.1
	c-9.4,0-17.1-7.7-17.1-17.1c0-1.5,0.2-2.9,0.6-4.4H250.1z"/>
<path class="st0" d="M416.4,147.1C405.2,114.9,376,92.4,342,89.8s-66.3,15.1-82.3,45.2s-12.7,66.8,8.5,93.5c0.8,1,1.6,1.9,2.4,2.9
	c0.1,0.1,0.1,0.1,0.2,0.2c2,2.3,4.1,4.5,6.4,6.6c0.6,0.5,1.2,1.1,1.8,1.6c1.2,1,2.4,2,3.6,3c2.4,1.9,5,3.7,7.6,5.3l0.1,0
	c1.7,1.1,3.4,2,5.2,3l0.7,0.4c1.7,0.9,3.4,1.7,5.1,2.4l1.1,0.5c0,0,0,0,0.1,0c3.5,1.5,7.1,2.7,10.8,3.6c7.2,1.9,14.6,2.9,22.1,2.9
	c2.7,0,5.4-0.1,8.1-0.4c6.1-0.6,12.1-1.8,17.9-3.6c0,0,0,0,0,0c3.7-1.2,7.3-2.6,10.8-4.3c0,0,0,0,0.1,0c0.8-0.4,1.5-0.8,2.3-1.2
	c0.1-0.1,0.2-0.1,0.4-0.2l1.8-1c1.5-0.8,3-1.7,4.5-2.7c0.4-0.2,0.8-0.5,1.2-0.8c1.4-0.9,2.7-1.8,4-2.8c0.2-0.2,0.5-0.3,0.7-0.5
	C416.8,221.1,428.6,182.1,416.4,147.1L416.4,147.1z"/>
<g>
	<circle class="st3" cx="363.7" cy="197.7" r="12.9"/>
	<path class="st3" d="M367.3,185.3c7.1,0,12.9,5.8,12.9,12.8c0,2.1-0.5,4.2-1.5,6.1c3-3.8,3.7-9,1.6-13.4s-6.4-7.3-11.3-7.5
		s-9.4,2.5-11.7,6.7C359.7,187,363.4,185.2,367.3,185.3L367.3,185.3z"/>
	<circle class="st3" cx="339.7" cy="160" r="37.7"/>
	<path class="st3" d="M310.1,136.6c13.5-15.2,36.7-17,52.3-4l-0.9-0.9c-15.5-13.9-39.4-12.6-53.3,2.9s-12.6,39.4,2.9,53.3
		c0.1,0.1,0.1,0.1,0.2,0.2c0.3,0.3,0.6,0.6,1,0.8C297.5,174.9,296.5,151.8,310.1,136.6L310.1,136.6z"/>
</g>
<circle class="st5" cx="339.4" cy="173.1" r="24.3"/>
<path class="st4" d="M382.9,236.4v8.2l-4.5,2.7l-1.8,1c-0.1,0.1-0.2,0.1-0.4,0.2l-2.3,1.2c0,0,0,0-0.1,0c-3.5,1.7-7.1,3.1-10.8,4.3
	c0,0,0,0,0,0c-5.8,1.8-11.8,3.1-17.9,3.6c-2.7,0.3-5.4,0.4-8.1,0.4c-7.5,0-14.9-1-22.1-2.9c-3.7-1-7.3-2.2-10.8-3.6c0,0,0,0-0.1,0
	l-1.1-0.5c-1.7-0.8-3.4-1.6-5.1-2.4l-0.7-0.4c-1.8-0.9-3.5-1.9-5.2-3l-0.1,0c-2.6-1.6-5.2-3.4-7.6-5.3c-1.2-1-2.4-2-3.6-3
	c-0.6-0.5-1.2-1.1-1.8-1.6c-2.2-2.1-4.4-4.3-6.4-6.6c0.3-1.6,0.7-3.2,1.2-4.7l0,0c0.1-0.3,0.2-0.5,0.3-0.8c0.1-0.2,0.2-0.4,0.3-0.6
	c2.8-5.2,7.7-6.4,13.9-6.7c3.5-0.2,7.4,0,11.4,0c2.2,0,4.4-0.1,6.6-0.3c14.1-1.3,11.5-9.6,12.2-14.1c0.6-4.3,4.5-0.6,4.8-0.3l0,0
	c8,3.7,16.8,5.3,25.5,4.5c1.5-0.2,3-0.3,4.5-0.3c4,0,3.1,1.1,1.7,2c-0.7,0.4-1.4,0.8-2.1,1.2c0,0-0.6,3.8-1.3,9.6
	c-0.6,5.5,18.8,7.4,22.6,8.6h0C378.5,228.1,381.8,231.9,382.9,236.4L382.9,236.4z"/>
<path class="st3" d="M318.6,142.7V167h5.6l7.2-7.7l-1,7.7h24.9l-1.5-7.7l3.1,7.7h4v-24.3H318.6z"/>
<g>
	<ellipse class="st5" cx="314.7" cy="168" rx="1.9" ry="3.5"/>
	<ellipse class="st5" cx="364" cy="168" rx="1.9" ry="3.5"/>
</g>
<path class="st4" d="M416.4,147.1C405.2,114.9,376,92.4,342,89.8s-66.3,15.1-82.3,45.2s-12.7,66.8,8.5,93.5c0.8,1,1.6,1.9,2.4,2.9
	c0.1,0.1,0.1,0.1,0.2,0.2c2,2.3,4.1,4.5,6.4,6.6c0.6,0.5,1.2,1.1,1.8,1.6c1.2,1,2.4,2,3.6,3c2.4,1.9,5,3.7,7.6,5.3l0.1,0
	c1.7,1.1,3.4,2,5.2,3l0.7,0.4c1.7,0.9,3.4,1.7,5.1,2.4l1.1,0.5c0,0,0,0,0.1,0c3.5,1.5,7.1,2.7,10.8,3.6c7.2,1.9,14.6,2.9,22.1,2.9
	c2.7,0,5.4-0.1,8.1-0.4c6.1-0.6,12.1-1.8,17.9-3.6c0,0,0,0,0,0c3.7-1.2,7.3-2.6,10.8-4.3c0,0,0,0,0.1,0c0.8-0.4,1.5-0.8,2.3-1.2
	c0.1-0.1,0.2-0.1,0.4-0.2l1.8-1c1.5-0.8,3-1.7,4.5-2.7c0.4-0.2,0.8-0.5,1.2-0.8c1.4-0.9,2.7-1.8,4-2.8c0.2-0.2,0.5-0.3,0.7-0.5
	C416.8,221.1,428.6,182.1,416.4,147.1L416.4,147.1z M384.4,239.8c-0.5,0.4-1,0.8-1.6,1.1c-0.5,0.4-1,0.8-1.5,1.1
	c-0.4,0.3-0.9,0.6-1.4,0.9c-0.4,0.3-0.8,0.5-1.2,0.8c-1.3,0.8-2.6,1.6-3.9,2.3l-0.4,0.2l-1.8,0.9c-0.1,0-0.2,0.1-0.2,0.1l-0.1,0
	c-0.7,0.4-1.5,0.8-2.2,1.1c-2.9,1.4-5.9,2.6-9,3.6l-1.2,0.4c-5.5,1.8-11.2,2.9-17,3.4c-2.5,0.2-5.1,0.4-7.6,0.4
	c-7.1,0-14.1-0.9-20.9-2.7c-3.5-0.9-6.9-2.1-10.3-3.5c-0.4-0.1-0.7-0.3-1-0.4c-0.2-0.1-0.4-0.2-0.5-0.2c-1.4-0.6-2.9-1.3-4.3-2
	l-0.7-0.4c-1.7-0.9-3.4-1.8-5-2.9c-0.6-0.4-1.2-0.8-1.8-1.2c-1.8-1.2-3.6-2.5-5.4-3.9c-1.2-0.9-2.3-1.8-3.4-2.8
	c-0.6-0.5-1.2-1-1.7-1.5c-2.2-2-4.2-4.2-6.2-6.4c-0.6-0.7-1.3-1.5-1.9-2.2c-0.1-0.2-0.3-0.3-0.4-0.5
	c-27.8-35.1-21.9-86.1,13.2-113.9c17.1-13.5,38.9-19.6,60.5-16.9c44.4,5.6,75.9,46.2,70.3,90.6C413.1,207,401.8,226.6,384.4,239.8
	L384.4,239.8z"/>
<g>
	<g>
		<path id="C" class="st2" d="M394.6,328.1H276.2c-7.8,0-14.2-6.4-14.2-14.2c0-7.8,6.4-14.2,14.2-14.2h118.4
			c7.8,0,14.2,6.4,14.2,14.2c0,2.5-0.7,5-1.9,7.1C404.3,325.4,399.7,328.1,394.6,328.1L394.6,328.1z"/>
	</g>
	<g>
		<path id="C_1_" class="st2" d="M394.6,371.9H276.2c-7.8,0-14.2-6.4-14.2-14.2c0-7.8,6.4-14.2,14.2-14.2h118.4
			c7.8,0,14.2,6.4,14.2,14.2c0,2.5-0.7,5-1.9,7.1C404.3,369.2,399.7,371.9,394.6,371.9L394.6,371.9z"/>
	</g>
</g>
</svg>
